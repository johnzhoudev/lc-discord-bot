name: build-and-deploy

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::273354659414:role/github-actions-role

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR repo
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: lc-discord-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Update ECS Service
        env:
          CLUSTER: lc-discord-bot
          SERVICE_NAME: lc-discord-bot
          REGION: us-east-1
        run: |
          aws ecs update-service --cluster $CLUSTER --service $SERVICE_NAME --force-new-deployment

          echo "âœ… Deployment triggered. Watch progress at:"
          echo "https://console.aws.amazon.com/ecs/home?region=$REGION#/clusters/$CLUSTER/services/$SERVICE_NAME/details"

          # aws ecs wait services-stable --cluster $CLUSTER --service $SERVICE_NAME

